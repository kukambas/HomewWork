{
    "contents" : "#include <algorithm>\n#include <cmath>\n#include <Rcpp.h>\nusing namespace Rcpp;\n//' @title Perm Function\n//' @description Calculates all permutations for an integer vector of given length n.\n//'\n//' @param n a positive integer.\n//' @return P matrix with permutations in rows.\n//'\n//' @export \n// [[Rcpp::export]]\nIntegerMatrix perms(double n)\n{\n  if(n < 0)\n    Rcpp::stop(\"Length of requested integer vector cannot be negative\");\n    \n  if(n - floor(n) != 0)\n    Rcpp::stop(\"Length of requested integer vector cannot fraction\");\n    \n    \n  int n_fac = 1;\n  IntegerVector v(n);\n  //calculating factorial and defining starting vector\n  for(int i=0; i < n; i++)\n  {\n    n_fac = n_fac*(i+1);\n    v[i] = i+1;\n  }\n  IntegerMatrix P(n_fac,n);\n  // Filling up resulting matrix\n  int j = 0;\n  do{\n    P(j,_) = v;\n    j++;\n  }while(std::next_permutation(v.begin(),v.end()));\n  \n  return(P);\n}\n",
    "created" : 1422465263847.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3223545212",
    "id" : "2F9D8F34",
    "lastKnownWriteTime" : 1422479529,
    "path" : "C:/main/school/dokt/e-learning/AdvancedR/hw6/package/HW6_package1/HW6/src/perm.cpp",
    "project_path" : "src/perm.cpp",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "cpp"
}